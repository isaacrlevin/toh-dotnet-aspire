# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    # Creates a new Dev Drive
    ### -------------------------------------
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
      settings:
        DiskId: '0'
        DiskIdType: 'Number'
        DriveLetter: 'Z'
        FSLabel: 'Dev Drive 1'
        DevDrive: true
        AllowDestructive: true
        FSFormat: 'ReFS'
        Size: '50Gb'
    ### Install Git
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: git
      directives:
        allowPrerelease: true
      settings:
        id: Git.Git
    ### Configure Git to use Default WAM account
    ### -------------------------------------
    - resource: PSDscResources/Script
      dependsOn:
        - git
      directives:
        description: Configure Git to use Default WAM account
      settings:
        SetScript: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
          SET GCM_MSAUTH_USEDEFAULTACCOUNT="true"
          git config --global credential.msauthUseDefaultAccount true
        GetScript: return $false
        TestScript: return $false
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: dotnet
      directives:
        description: Install .NET 9
        allowPrerelease: true
      settings:
        id: Microsoft.DotNet.SDK.9
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: nodejs
      directives:
        description: Install NodeJS
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS
    - resource: Microsoft.WinGet.DSC/WinGetPackage
          id: vsenterprise
          directives:
          description: Install Visual Studio 2022 Enterprise
          allowPrerelease: true
          settings:
            id: Microsoft.VisualStudio.2022.Enterprise.Preview
        ### Install VS Workloads
        ### -------------------------------------
    - resource: Microsoft.VisualStudio.DSC/VSComponents
      directives:
        description: Install required VS workloads from vsconfig file
        allowPrerelease: true
      dependsOn:
        - vsenterprise
      settings:
        productId: Microsoft.VisualStudio.Product.Enterprise
        channelId: VisualStudio.17.Preview
        components: [Microsoft.VisualStudio.Workload.NetWeb, Microsoft.VisualStudio.Workload.NetCrossPlat, aspire]
        includeRecommended: true

    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: docker
      directives:
        description: Install Docker Desktop
        allowPrerelease: true
      settings:
       id: Docker.DockerDesktop

    ### Clone Repo
    ### -------------------------------------
    - resource: GitDsc/GitClone
      directives:
        description: Clone latest main branch of repository
        allowPrerelease: true
      settings:
        HttpsUrl: https://github.com/isaacrlevin/toh-dotnet-aspire
        RootDirectory: z:\src
        Ensure: Present      